# Generated by Django 4.0.3 on 2022-05-28 17:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=200, verbose_name='first name')),
                ('middle_name', models.CharField(max_length=200, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=200, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'login',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('college_name', models.CharField(max_length=200)),
                ('dean', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'db_table': 'college',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=200)),
                ('credits', models.IntegerField()),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.college')),
            ],
            options={
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snumber', models.CharField(max_length=200)),
                ('days', models.CharField(max_length=200)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('building', models.CharField(max_length=200, null=True)),
                ('room', models.CharField(max_length=200, null=True)),
                ('gender', models.CharField(max_length=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.course')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('registration_id', models.CharField(max_length=200, unique=True)),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.department')),
            ],
            options={
                'db_table': 'instructor',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('login', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('gpa', models.FloatField(blank=True, default=0)),
                ('mgpa', models.FloatField(blank=True, default=0)),
                ('credits', models.IntegerField(blank=True, default=0)),
                ('major_credits', models.IntegerField(blank=True, default=0)),
                ('passed_terms', models.IntegerField(default=0)),
                ('registration_id', models.CharField(max_length=200, unique=True)),
                ('status', models.IntegerField(choices=[(1, 'Enrolled'), (2, 'Graduated'), (3, 'Dismissed')], default=1)),
                ('warning', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'student',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('semester', models.IntegerField(choices=[(1, 'Fall'), (2, 'Spring'), (3, 'Summer')])),
                ('registration_starts', models.DateTimeField()),
                ('registration_ends', models.DateTimeField()),
                ('semester_starts', models.DateField()),
                ('semester_ends', models.DateField()),
                ('exams_starts', models.DateField()),
                ('exams_ends', models.DateField()),
                ('grading_deadline', models.DateField()),
                ('status', models.IntegerField(choices=[(1, 'Ongoing'), (2, 'Finished'), (3, 'New')], default=3)),
            ],
            options={
                'db_table': 'semester',
                'unique_together': {('year', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('credits', models.IntegerField(blank=True, null=True)),
                ('segment_type', models.IntegerField(choices=[(1, 'Required'), (2, 'Elective')])),
                ('courses', models.ManyToManyField(blank=True, to='portal.course')),
            ],
        ),
        migrations.CreateModel(
            name='SectionAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(max_length=400)),
                ('title', models.CharField(max_length=200)),
                ('adate', models.DateTimeField(auto_now_add=True)),
                ('priority', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[(1, 'Active'), (-1, 'Hidden')], default=1, max_length=200)),
                ('logins', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.section')),
            ],
            options={
                'db_table': 'section_announcement',
            },
        ),
        migrations.AddField(
            model_name='section',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.semester'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('doc_type', models.IntegerField(choices=[(1, 'towhom it may concern'), (2, 'transcript')])),
                ('document_date', models.DateField(auto_now_add=True)),
                ('login', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.semester')),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='DeptAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('info', models.CharField(max_length=800)),
                ('adate', models.DateTimeField(auto_now_add=True)),
                ('priority', models.IntegerField(default=2)),
                ('status', models.CharField(choices=[(1, 'Active'), (2, 'Active for students'), (3, 'Active for instructors'), (-1, 'Hidden')], default=1, max_length=200)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.department')),
                ('logins', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'dept_announcement',
            },
        ),
        migrations.CreateModel(
            name='CourseRequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requisite_type', models.CharField(choices=[('prerequisite', 'Prerequisite'), ('corequisite', 'Corequisite')], max_length=200)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.course')),
                ('requisite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisite', to='portal.course')),
            ],
            options={
                'db_table': 'course_requisite',
                'unique_together': {('course', 'requisite')},
            },
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='requisites',
            field=models.ManyToManyField(blank=True, through='portal.CourseRequisite', to='portal.course'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('info', models.CharField(max_length=800)),
                ('adate', models.DateTimeField(auto_now_add=True)),
                ('priority', models.IntegerField(default=3)),
                ('status', models.CharField(choices=[(1, 'Active'), (2, 'Active for students'), (3, 'Active for instructors'), (-1, 'Hidden')], default=1, max_length=200)),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.college')),
                ('logins', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.CreateModel(
            name='StudentSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.section')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.student')),
            ],
            options={
                'db_table': 'student_section',
                'unique_together': {('student', 'section')},
            },
        ),
        migrations.CreateModel(
            name='StudentCoursePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('year', models.IntegerField()),
                ('semester', models.IntegerField(choices=[(1, 'Fall'), (2, 'Spring'), (3, 'Summer')])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.student')),
            ],
            options={
                'db_table': 'student_course_plan',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.semester'),
        ),
        migrations.AddField(
            model_name='section',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.instructor'),
        ),
        migrations.AddField(
            model_name='section',
            name='students',
            field=models.ManyToManyField(through='portal.StudentSection', to='portal.student'),
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.instructor'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(blank=True, through='portal.StudentCoursePlan', to='portal.student'),
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('year', models.IntegerField()),
                ('ptype', models.IntegerField(choices=[(1, 'Major'), (2, 'General'), (3, 'Minor')])),
                ('total_credits', models.IntegerField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.department')),
                ('segments', models.ManyToManyField(blank=True, to='portal.segment')),
                ('students', models.ManyToManyField(blank=True, to='portal.student')),
            ],
            options={
                'db_table': 'program',
                'unique_together': {('title', 'year')},
            },
        ),
    ]
